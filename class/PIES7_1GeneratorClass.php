<?php
include_once("mysqlClass.php");
include_once("pricingClass.php");
include_once("assetClass.php");
include_once("pimClass.php");

class PIESgenerator
{   
 function createPIESdoc($header,$marketingcopys,$items,$generatoroptions=false)
 {
  $doc = new DOMDocument('1.0', 'UTF-8');
  $profilename=''; if($generatoroptions && array_key_exists('ProfileName',$generatoroptions)){$profilename=$generatoroptions['ProfileName'];}
  $comments=$doc->createComment("\r\n       File generated by SandPIM - an open-source PIM system\r\n       designed around the ACES and PIES standards.\r\n       Source repo for SandPIM can be found at\r\n       https://github.com/autopartsource/sandpim\r\n\r\n       Receiver Profile:".$profilename."\r\n\r\n");
  $doc->appendChild($comments);
  
  $root = $doc->createElementNS('http://www.autocare.org', 'PIES');
  $root = $doc->appendChild($root);
  $root->setAttributeNS('http://www.w3.org/2000/xmlns/' ,'xmlns:xs' ,'http://www.w3.org/2001/XMLSchema');
  
  $TestFileElement=new DOMElement('TestFile','false');
  $root->appendChild($TestFileElement);
  
  // ---------------------- header ------------------------------
  $headerElement =  new DOMElement('Header');
  $root->appendChild($headerElement);
  $PIESVersionElement=new DOMElement('PIESVersion','7.1');
  $headerElement->appendChild($PIESVersionElement);

  $SubmissionTypeElement=new DOMElement('SubmissionType','FULL');
  $headerElement->appendChild($SubmissionTypeElement);

    
  if(array_key_exists('BlanketEffectiveDate',$header)){$BlanketEffectiveDateElement=$doc->createElement('BlanketEffectiveDate',$header['BlanketEffectiveDate']); $headerElement->appendChild($BlanketEffectiveDateElement);  }
  if(array_key_exists('ChangesSinceDate',$header)){$ChangesSinceDateElement=$doc->createElement('ChangesSinceDate',$header['ChangesSinceDate']); $headerElement->appendChild($ChangesSinceDateElement);}
  if(array_key_exists('ParentDUNSNumber',$header)){$ParentDUNSNumberElement=new DOMElement('ParentDUNSNumber',$header['ParentDUNSNumber']);  $headerElement->appendChild($ParentDUNSNumberElement);}
  if(array_key_exists('ParentGLN',$header)){$ParentGLNelement=new DOMElement('ParentGLN',$header['ParentGLN']);  $headerElement->appendChild($ParentGLNelement);}
  if(array_key_exists('ParentVMRSID',$header)){$ParentVMRSIDelement=new DOMElement('ParentVMRSID',$header['ParentVMRSID']);  $headerElement->appendChild($ParentVMRSIDelement);}
  if(array_key_exists('ParentAAIAID',$header)){$ParentAAIAIDelement=new DOMElement('ParentAAIAID',$header['ParentAAIAID']);  $headerElement->appendChild($ParentAAIAIDelement);}
  if(array_key_exists('BrandOwnerDUNS',$header)){$BrandOwnerDUNSelement=new DOMElement('BrandOwnerDUNS',$header['BrandOwnerDUNS']);  $headerElement->appendChild($BrandOwnerDUNSelement);}
  if(array_key_exists('BrandOwnerGLN',$header)){$BrandOwnerGLNelement=new DOMElement('BrandOwnerGLN',$header['BrandOwnerGLN']);  $headerElement->appendChild($BrandOwnerGLNelement);}
  if(array_key_exists('BrandOwnerVMRSID', $header)){$BrandOwnerVMRSIDelement=new DOMElement('BrandOwnerVMRSID',$header['BrandOwnerVMRSID']);  $headerElement->appendChild($BrandOwnerVMRSIDelement);}
  if(array_key_exists('BrandOwnerAAIAID', $header)){$BrandOwnerAAIAIDelement=new DOMElement('BrandOwnerAAIAID',$header['BrandOwnerAAIAID']); $headerElement->appendChild($BrandOwnerAAIAIDelement);}   
  if(array_key_exists('BuyerDuns',$header)){$BuyerDunsElement=new DOMElement('BuyerDuns',$header['BuyerDuns']); $headerElement->appendChild($BuyerDunsElement);}   
  if(array_key_exists('CurrencyCode',$header)){$CurrencyCodeElement=new DOMElement('CurrencyCode',$header['CurrencyCode']); $headerElement->appendChild($CurrencyCodeElement);}
  if(array_key_exists('LanguageCode',$header)){$LanguageCodeElement=new DOMElement('LanguageCode',$header['LanguageCode']); $headerElement->appendChild($LanguageCodeElement);}
  if(array_key_exists('TechnicalContact',$header)){$TechnicalContactElement=new DOMElement('TechnicalContact',$header['TechnicalContact']); $headerElement->appendChild($TechnicalContactElement);}
  if(array_key_exists('ContactEmail', $header)){$ContactEmailElement = new DOMElement('ContactEmail',$header['ContactEmail']); $headerElement->appendChild($ContactEmailElement);}
  if(array_key_exists('PCdbVersionDate',$header)){$PCdbVersionDateElement=new DOMElement('PCdbVersionDate',$header['PCdbVersionDate']);  $headerElement->appendChild($PCdbVersionDateElement);}
  if(array_key_exists('PAdbVersionDate',$header)){$PAdbVersionDateElement=new DOMElement('PAdbVersionDate',$header['PAdbVersionDate']);  $headerElement->appendChild($PAdbVersionDateElement);}

  //----------------------- price sheets ---------------
  
   if(isset($item['prices']) && count($item['prices']))
   {
    $PricesElement = $doc->createElement('Prices');
    
    $pricesheetnumber=''; $currencycode=''; $effectivedate=''; $expirationdate='';
    
    
    foreach($item['prices'] as $price)
    {
       // if($price[''])
        
    }
    
    $PriceSheetsElement=$doc->createElement('PriceSheets');
    $PriceSheetElement=$doc->createElement('PriceSheet');
    $PriceSheetsElement->appendChild($PriceSheetElement);
    $PriceSheetElement->setAttribute('MaintenanceType', 'A');
    $PriceSheetNumberElement=$doc->createElement('PriceSheetNumber',$pricesheetnumber); $PriceSheetElement->appendChild($PriceSheetNumberElement);
    $CurrencyCodeElement=$doc->createElement('CurrencyCode',$currencycode); $PriceSheetElement->appendChild($CurrencyCodeElement);
    $EffectiveDateElement=$doc->createElement('EffectiveDate',$effectivedate); $PriceSheetElement->appendChild($EffectiveDateElement);
    $ExpirationDateElement=$doc->createElement('ExpirationDate',$expirationdate); $PriceSheetElement->appendChild($ExpirationDateElement);
    $root->appendChild($PriceSheetsElement);
   }
  
  //----------------------- marketing copy -----------------------
  if(count($marketingcopys))
  {      
   $MarketingCopyElement=$doc->createElement('MarketingCopy');
   foreach($marketingcopys as $marketcopy)
   {
    $MarketCopyElement=$doc->createElement('MarketCopy');
    $MarketCopyContentElement=$doc->createElement('MarketCopyContent',$marketcopy['MarketCopyContent']);
    $MarketCopyContentElement->setAttribute('MaintenanceType', 'A');
    if(array_key_exists('MarketCopyCode',$marketcopy)){$MarketCopyContentElement->setAttribute('MarketCopyCode', $marketcopy['MarketCopyCode']);}
    if(array_key_exists('MarketCopyReference',$marketcopy)){$MarketCopyContentElement->setAttribute('MarketCopyReference', $marketcopy['MarketCopyReference']);}
    if(array_key_exists('MarketCopySubCode',$marketcopy)){$MarketCopyContentElement->setAttribute('MarketCopySubCode', $marketcopy['MarketCopySubCode']);}
    if(array_key_exists('MarketCopySubCodeReference',$marketcopy)){$MarketCopyContentElement->setAttribute('MarketCopySubCodeReference', $marketcopy['MarketCopySubCodeReference']);}
    if(array_key_exists('MarketCopyType',$marketcopy)){$MarketCopyContentElement->setAttribute('MarketCopyType', $marketcopy['MarketCopyType']);}
    if(array_key_exists('RecordSequence',$marketcopy)){$MarketCopyContentElement->setAttribute('RecordSequence', $marketcopy['RecordSequence']);}
    if(array_key_exists('LanguageCode',$marketcopy)){$MarketCopyContentElement->setAttribute('LanguageCode', $marketcopy['LanguageCode']);}
    $MarketCopyElement->appendChild($MarketCopyContentElement);
    $MarketingCopyElement->appendChild($MarketCopyElement);
   }
   $root->appendChild($MarketingCopyElement);
  }
 
  // --------------------- items ---------------------------------   
  $ItemsElement=new DOMElement('Items');
  $root->appendChild($ItemsElement);
  foreach($items as $PartNumber=>$item)
  {
   $ItemElement=new DOMElement('Item');
   $ItemsElement->appendChild($ItemElement);

   $ItemElement->setAttribute('MaintenanceType', 'A');
 
   if(array_key_exists('HazardousMaterialCode', $item)){$HazardousMaterialCodeElement= $doc->createElement('HazardousMaterialCode',$item['HazardousMaterialCode']); $ItemElement->appendChild($HazardousMaterialCodeElement);}
   if(array_key_exists('BaseItemID', $item)){$BaseItemIDelement= $doc->createElement('BaseItemID',$item['BaseItemID']); $ItemElement->appendChild($BaseItemIDelement);}
   if(array_key_exists('ItemLevelGTIN',$item) && trim($item['ItemLevelGTIN'])!=''){$ItemLevelGTINelement=$doc->createElement('ItemLevelGTIN',$item['ItemLevelGTIN']); $ItemElement->appendChild($ItemLevelGTINelement); $ItemLevelGTINelement->setAttribute('GTINQualifier', $item['GTINQualifier']);}
 
   if(array_key_exists('externalpart', $item) && $item['externalpart']!=false)
   {// there is a receiverprofile-specific part translation (internalpart=externalpart) in play us it
       $PartNumberElement= $doc->createElement('PartNumber',$item['externalpart']);
   }
   else
   {// no part translation in play. use the native partnumber
       $PartNumberElement= $doc->createElement('PartNumber',$PartNumber);       
   }
   
   $ItemElement->appendChild($PartNumberElement);
   $BrandAAIAIDelement= $doc->createElement('BrandAAIAID',$item['BrandAAIAID']); $ItemElement->appendChild($BrandAAIAIDelement);
   if(array_key_exists('BrandLabel', $item)){$BrandLabelElement= $doc->createElement('BrandLabel',$item['BrandLabel']); $ItemElement->appendChild($BrandLabelElement); }
   if(array_key_exists('VMRSBrandID', $item)){$VMRSBrandIDelement= $doc->createElement('VMRSBrandID',$item['VMRSBrandID']); $ItemElement->appendChild($VMRSBrandIDelement); }
   if(array_key_exists('ACESApplications', $item)){$ACESApplicationsElement= $doc->createElement('ACESApplications',$item['ACESApplications']); $ItemElement->appendChild($ACESApplicationsElement);}
   if(array_key_exists('ItemQuantitySize', $item) && array_key_exists('ItemQuantitySizeUOM', $item)){$ItemQuantitySizeElement= $doc->createElement('ItemQuantitySize',$item['ItemQuantitySize']); $ItemQuantitySizeElement->setAttribute('UOM', $item['ItemQuantitySizeUOM']); $ItemElement->appendChild($ItemQuantitySizeElement);}
   if(array_key_exists('ContainerType', $item)){$ContainerTypeElement= $doc->createElement('ContainerType',$item['ContainerType']); $ItemElement->appendChild($ContainerTypeElement);}

   if(array_key_exists('QuantityPerApplication', $item))
   {
    $QuantityPerApplicationElement= $doc->createElement('QuantityPerApplication',$item['QuantityPerApplication']);
    if(array_key_exists('QuantityPerApplicationQualifier', $item)){$QuantityPerApplicationElement->setAttribute('Qualifier',$item['QuantityPerApplicationQualifier']);}
    if(array_key_exists('QuantityPerApplicationUOM', $item)){$QuantityPerApplicationElement->setAttribute('UOM',$item['QuantityPerApplicationUOM']);}
    $ItemElement->appendChild($QuantityPerApplicationElement);
   }
   
   if(array_key_exists('ItemEffectiveDate', $item)){$ItemEffectiveDateElement= $doc->createElement('ItemEffectiveDate',$item['ItemEffectiveDate']); $ItemElement->appendChild($ItemEffectiveDateElement);}
   if(array_key_exists('AvailableDate', $item)){$AvailableDateElement= $doc->createElement('AvailableDate',$item['AvailableDate']); $ItemElement->appendChild($AvailableDateElement);}
   if(array_key_exists('MinimumOrderQuantity', $item) && array_key_exists('MinimumOrderQuantityUOM', $item)){$MinimumOrderQuantityElement= $doc->createElement('MinimumOrderQuantity',$item['MinimumOrderQuantity']); $ItemElement->appendChild($MinimumOrderQuantityElement);  $MinimumOrderQuantityElement->setAttribute('UOM', $item['MinimumOrderQuantityUOM']);  }
   
   if(array_key_exists('ManufacturerProductCodeGroup', $item) || array_key_exists('ManufacturerProductCodeSubGroup', $item))
   {
    $ManufacturerProductCodesElement= $doc->createElement('ManufacturerProductCodes');
    if(array_key_exists('ManufacturerProductCodeGroup', $item)){$ManufacturerProductCodeGroup= $doc->createElement('Group',$item['ManufacturerProductCodeGroup']); $ManufacturerProductCodesElement->appendChild($ManufacturerProductCodeGroup);}
    if(array_key_exists('ManufacturerProductCodeSubGroup', $item)){$ManufacturerProductCodeSubGroup= $doc->createElement('SubGroup',$item['ManufacturerProductCodeSubGroup']); $ManufacturerProductCodesElement->appendChild($ManufacturerProductCodeSubGroup);}
    $ItemElement->appendChild($ManufacturerProductCodesElement);
   }
   
   if(array_key_exists('AAIAProductCategoryCode', $item)){$AAIAProductCategoryCodeElement= $doc->createElement('AAIAProductCategoryCode',$item['AAIAProductCategoryCode']); $ItemElement->appendChild($AAIAProductCategoryCodeElement); }
   if(array_key_exists('UNSPSC', $item)){$UNSPSCElement= $doc->createElement('UNSPSC',$item['UNSPSC']); $ItemElement->appendChild($UNSPSCElement); }

   $PartTerminologyIDelement= $doc->createElement('PartTerminologyID',$item['PartTerminologyID']); $ItemElement->appendChild($PartTerminologyIDelement);

   if(array_key_exists('VMRSCode', $item)){$VMRSCodeElement= $doc->createElement('VMRSCode',$item['VMRSCode']); $ItemElement->appendChild($VMRSCodeElement); }
   
   
   
   //------------------------- descriptions -----------------------
   if(isset($item['descriptions']) && count($item['descriptions']))
   {
    $DescriptionsElement = $doc->createElement('Descriptions');
    foreach($item['descriptions'] as $description)
    {
     $DescriptionElement=$doc->createElement('Description');//, htmlspecialchars($description['Description'], ENT_XML1 | ENT_COMPAT, 'UTF-8'));
     $DescriptionElement->appendChild($doc->createTextNode($description['Description']));
     $DescriptionElement->setAttribute('MaintenanceType','A');
     if(array_key_exists('DescriptionCode',$description) && trim($description['DescriptionCode'])!=''){$DescriptionElement->setAttribute('DescriptionCode',$description['DescriptionCode']);}
     if(array_key_exists('LanguageCode',$description) && trim($description['LanguageCode'])!=''){$DescriptionElement->setAttribute('LanguageCode',$description['LanguageCode']);}
     if(array_key_exists('Sequence',$description) && trim($description['Sequence'])!=''){$DescriptionElement->setAttribute('Sequence',$description['Sequence']);}
     if(trim($description['Description'])!='')
     {
      $DescriptionsElement->appendChild($DescriptionElement);
     }
    }
    
    $ItemElement->appendChild($DescriptionsElement);
   }
   //---------------------- prices ---------------------------------
   
   if(isset($item['prices']) && count($item['prices']))
   {
    $PricesElement = $doc->createElement('Prices');
    foreach($item['prices'] as $price)
    {
     $PricingElement=$doc->createElement('Pricing');
     $PricingElement->setAttribute('MaintenanceType','A');
     $PricingElement->setAttribute('PriceType',$price['PriceType']);
     if(array_key_exists('PriceSheetNumber',$price)){$PriceSheetNumberElement=$doc->createElement('PriceSheetNumber',$price['PriceSheetNumber']); $PricingElement->appendChild($PriceSheetNumberElement);}
     if(array_key_exists('CurrencyCode',$price)){$CurrencyCodeElement=$doc->createElement('CurrencyCode',$price['CurrencyCode']); $PricingElement->appendChild($CurrencyCodeElement);}
     if(array_key_exists('EffectiveDate',$price)){$EffectiveDateElement=$doc->createElement('EffectiveDate',$price['EffectiveDate']); $PricingElement->appendChild($EffectiveDateElement);}
     if(array_key_exists('ExpirationDate',$price)){$ExpirationDateElement=$doc->createElement('ExpirationDate',$price['ExpirationDate']); $PricingElement->appendChild($ExpirationDateElement);}
     if(array_key_exists('Price',$price) && array_key_exists('PriceUOM',$price)){$PriceElement=$doc->createElement('Price',$price['Price']); $PriceElement->setAttribute('UOM', $price['PriceUOM']); $PricingElement->appendChild($PriceElement);}
     if(array_key_exists('PriceTypeDescription',$price)){$PriceTypeDescriptionElement=$doc->createElement('PriceTypeDescription', htmlspecialchars($price['PriceTypeDescription'], ENT_XML1 | ENT_COMPAT, 'UTF-8')); $PricingElement->appendChild($PriceTypeDescriptionElement);}
     if(array_key_exists('PriceBreak',$price) && array_key_exists('PriceBreakUOM',$price)){$PriceBreakElement=$doc->createElement('PriceBreak',$price['PriceBreak']); $PriceBreakElement->setAttribute('UOM', $price['PriceBreakUOM']); $PricingElement->appendChild($PriceBreakElement);}
     if(array_key_exists('PriceMultiplier',$price)){$PriceMultiplierElement=$doc->createElement('PriceMultiplier',$price['PriceMultiplier']); $PricingElement->appendChild($PriceMultiplierElement);}
     $PricesElement->appendChild($PricingElement);
    }
    $ItemElement->appendChild($PricesElement);
   }
   
   //------------------------ EXPI ---------------------------- 
   
   if(isset($item['expis']) && count($item['expis']))
   {
    $ExtendedInformationElement = $doc->createElement('ExtendedInformation');
    foreach($item['expis'] as $expi)
    {
     if(array_key_exists('EXPIValue',$expi) && trim($expi['EXPIValue'])!='')
     {
      $ExtendedProductInformationElement=$doc->createElement('ExtendedProductInformation',$expi['EXPIValue']);
      $ExtendedProductInformationElement->setAttribute('MaintenanceType','A');
      $ExtendedProductInformationElement->setAttribute('EXPICode',$expi['EXPICode']);
      if(array_key_exists('LanguageCode',$expi)){$ExtendedProductInformationElement->setAttribute('LanguageCode',$expi['LanguageCode']);};
      $ExtendedInformationElement->appendChild($ExtendedProductInformationElement);
     }
    }
    $ItemElement->appendChild($ExtendedInformationElement);
   }
   
   //----------------------- attributes ----------------------------
   if(isset($item['attributes']) && count($item['attributes']))
   {
    $ProductAttributesElement = $doc->createElement('ProductAttributes');

    foreach($item['attributes'] as $attribute)
    {
     $ProductAttributeElement=$doc->createElement('ProductAttribute');//, htmlspecialchars($attribute['AttributeValue'], ENT_XML1 | ENT_COMPAT, 'UTF-8'));
     $ProductAttributeElement->appendChild($doc->createTextNode(str_replace('"','&quot;',$attribute['AttributeValue'])));

     $ProductAttributeElement->setAttribute('MaintenanceType','A');
     if(intval($attribute['AttributeID'])>0){$ProductAttributeElement->setAttribute('PADBAttribute','Y');}else{$ProductAttributeElement->setAttribute('PADBAttribute','N');}
     $ProductAttributeElement->setAttribute('AttributeID', $attribute['AttributeID']);
     
     if(array_key_exists('AttributeUOM',$attribute) && trim($attribute['AttributeUOM'])!=''){$ProductAttributeElement->setAttribute('AttributeUOM',$attribute['AttributeUOM']);}
     if(array_key_exists('StyleID',$attribute) && trim($attribute['StyleID'])!=''){$ProductAttributeElement->setAttribute('StyleID',$attribute['StyleID']);}
     if(array_key_exists('RecordNumber',$attribute) && trim($attribute['RecordNumber'])!=''){$ProductAttributeElement->setAttribute('RecordNumber',$attribute['RecordNumber']);}
     if(array_key_exists('StyleID',$attribute) && trim($attribute['StyleID'])!=''){$ProductAttributeElement->setAttribute('StyleID',$attribute['StyleID']);}
     if(array_key_exists('MultiValueQuantity',$attribute) && trim($attribute['MultiValueQuantity'])!=''){$ProductAttributeElement->setAttribute('MultiValueQuantity',$attribute['MultiValueQuantity']);}
     if(array_key_exists('MultiValueSequence',$attribute) && trim($attribute['MultiValueSequence'])!=''){$ProductAttributeElement->setAttribute('StyleID',$attribute['MultiValueSequence']);}
     if(array_key_exists('LanguageCode',$attribute) && trim($attribute['LanguageCode'])!=''){$ProductAttributeElement->setAttribute('LanguageCode',$attribute['LanguageCode']);}
     
     $ProductAttributesElement->appendChild($ProductAttributeElement);
    }
    $ItemElement->appendChild($ProductAttributesElement);
   }
 
   //----------------------- packages ----------------------------
   if(isset($item['packages']) && count($item['packages']))
   {       
    $PackagesElement=$doc->createElement('Packages');
    foreach($item['packages'] as $package)
    {
     $PackageElement=$doc->createElement('Package');
     $PackageElement->setAttribute('MaintenanceType','A');

     if(array_key_exists('PackageLevelGTIN',$package) && trim($package['PackageLevelGTIN'])!=''){$PackageLevelGTINelement=$doc->createElement('PackageLevelGTIN',$package['PackageLevelGTIN']); $PackageElement->appendChild($PackageLevelGTINelement);}
     if(array_key_exists('ElectronicProductCode',$package)){$ElectronicProductCodeElement=$doc->createElement('ElectronicProductCode',$package['ElectronicProductCode']); $PackageElement->appendChild($ElectronicProductCodeElement);}
     if(array_key_exists('PackageBarCodeCharacters',$package) && trim($package['PackageBarCodeCharacters'])!=''){$PackageBarCodeCharactersElement=$doc->createElement('PackageBarCodeCharacters',$package['PackageBarCodeCharacters']); $PackageElement->appendChild($PackageBarCodeCharactersElement);}
     if(array_key_exists('PackageUOM',$package)){$PackageUOMelement=$doc->createElement('PackageUOM',$package['PackageUOM']); $PackageElement->appendChild($PackageUOMelement);}
     if(array_key_exists('QuantityofEaches',$package)){$QuantityofEachesElement=$doc->createElement('QuantityofEaches',$package['QuantityofEaches']); $PackageElement->appendChild($QuantityofEachesElement);}

     
     if(array_key_exists('InnerQuantity',$package) && array_key_exists('InnerQuantityUOM',$package) && $package['InnerQuantity']!=0 && trim($package['InnerQuantityUOM'])!='')
     {
         $InnerQuantityElement=$doc->createElement('InnerQuantity',$package['InnerQuantity']);
         $PackageElement->appendChild($InnerQuantityElement);
         $InnerQuantityElement->setAttribute('InnerQuantityUOM',$package['InnerQuantityUOM']);   
     }

     if(array_key_exists('Orderable',$package) && trim($package['Orderable'])!=''){$OrderableElement=$doc->createElement('Orderable',$package['Orderable']); $PackageElement->appendChild($OrderableElement);}
     
     $PackageDimensionsExist=false;
     $DimensionsElement=$doc->createElement('Dimensions');
     if(array_key_exists('MerchandisingHeight',$package) && $package['MerchandisingHeight']>0){$MerchandisingHeightElement=$doc->createElement('MerchandisingHeight',$package['MerchandisingHeight']); $DimensionsElement->appendChild($MerchandisingHeightElement); $PackageDimensionsExist=true;}
     if(array_key_exists('MerchandisingWidth',$package) && $package['MerchandisingWidth']>0){$MerchandisingWidthElement=$doc->createElement('MerchandisingWidth',$package['MerchandisingWidth']); $DimensionsElement->appendChild($MerchandisingWidthElement); $PackageDimensionsExist=true;}
     if(array_key_exists('MerchandisingLength',$package) && $package['MerchandisingLength']>0){$MerchandisingLengthElement=$doc->createElement('MerchandisingLength',$package['MerchandisingLength']); $DimensionsElement->appendChild($MerchandisingLengthElement); $PackageDimensionsExist=true;}
     if(array_key_exists('ShippingHeight',$package) && $package['ShippingHeight']>0){$ShippingHeightElement=$doc->createElement('ShippingHeight',$package['ShippingHeight']); $DimensionsElement->appendChild($ShippingHeightElement); $PackageDimensionsExist=true;}
     if(array_key_exists('ShippingWidth',$package) && $package['ShippingWidth']>0){$ShippingWidthElement=$doc->createElement('ShippingWidth',$package['ShippingWidth']); $DimensionsElement->appendChild($ShippingWidthElement); $PackageDimensionsExist=true;}
     if(array_key_exists('ShippingLength',$package) && $package['ShippingLength']>0){$ShippingLengthElement=$doc->createElement('ShippingLength',$package['ShippingLength']); $DimensionsElement->appendChild($ShippingLengthElement); $PackageDimensionsExist=true;}
     if($PackageDimensionsExist && array_key_exists('DimensionsUOM',$package))
     {
         $DimensionsElement->setAttribute('UOM', $package['DimensionsUOM']);
         $PackageElement->appendChild($DimensionsElement);         
     }

     if(array_key_exists('Weight',$package) && $package['Weight']!=0 && array_key_exists('WeightsUOM',$package) && trim($package['WeightsUOM'])!='')
     {
      $WeightsElement=$doc->createElement('Weights'); 
      if(array_key_exists('WeightsUOM',$package)){$WeightsElement->setAttribute('UOM',$package['WeightsUOM']);}
      if(array_key_exists('Weight',$package)){$WeightElement=$doc->createElement('Weight',$package['Weight']); $WeightsElement->appendChild($WeightElement);}
      if(array_key_exists('DimensionalWeight',$package)){$DimensionalWeightElement=$doc->createElement('DimensionalWeight',$package['DimensionalWeight']); $WeightsElement->appendChild($DimensionalWeightElement);}
      $PackageElement->appendChild($WeightsElement);
     }

     if(array_key_exists('WeightVariance',$package)){$WeightVarianceElement=$doc->createElement('WeightVariance',$package['WeightVariance']); $PackageElement->appendChild($WeightVarianceElement);}
     if(array_key_exists('StackingFactor',$package)){$StackingFactorElement=$doc->createElement('StackingFactor',$package['StackingFactor']); $PackageElement->appendChild($StackingFactorElement);}

     if(array_key_exists('ShippingScope',$package) || array_key_exists('Bulk',$package) || array_key_exists('RegulatingCountry',$package) || array_key_exists('TransportMethod',$package) || array_key_exists('Regulated',$package) || array_key_exists('Description',$package) || array_key_exists('HazardousMaterialCodeQualifier',$package) || array_key_exists('HazardousMaterialDescription',$package) || array_key_exists('HazardousMaterialLabelCode',$package) || array_key_exists('ShippingName',$package) || array_key_exists('UNNAIDCode',$package) || array_key_exists('HazardousPlacardNotation',$package) || array_key_exists('WHMISCode',$package) || array_key_exists('WHMISFreeText',$package) || array_key_exists('PackingGroupCode',$package) || array_key_exists('RegulationsExemptionCode',$package) || array_key_exists('TextMessage',$package))
     {
      $HazardousMaterialElement=$doc->createElement('HazardousMaterial');
      $HazardousMaterialElement->setAttribute('MaintenanceType', 'A');
      if(array_key_exists('LanguageCode',$package)){$HazardousMaterialElement->setAttribute('LanguageCode',$package['LanguageCode']);}
      if(array_key_exists('ShippingScope',$package)){$ShippingScopeElement=$doc->createElement('ShippingScope',$package['ShippingScope']); $HazardousMaterialElement->appendChild($ShippingScopeElement);}
      if(array_key_exists('Bulk',$package)){$BulkElement=$doc->createElement('Bulk',$package['Bulk']); $HazardousMaterialElement->appendChild($BulkElement);}
      if(array_key_exists('RegulatingCountry',$package)){$RegulatingCountryElement=$doc->createElement('RegulatingCountry',$package['RegulatingCountry']); $HazardousMaterialElement->appendChild($RegulatingCountryElement);}
      if(array_key_exists('TransportMethod',$package)){$TransportMethodElement=$doc->createElement('TransportMethod',$package['TransportMethod']); $HazardousMaterialElement->appendChild($TransportMethodElement);}
      if(array_key_exists('Regulated',$package)){$RegulatedElement=$doc->createElement('Regulated',$package['Regulated']); $HazardousMaterialElement->appendChild($RegulatedElement);}
      if(array_key_exists('Description',$package)){$DescriptionElement=$doc->createElement('Description',$package['Description']); $HazardousMaterialElement->appendChild($DescriptionElement);}
      if(array_key_exists('HazardousMaterialCodeQualifier',$package)){$HazardousMaterialCodeQualifierElement=$doc->createElement('HazardousMaterialCodeQualifier',$package['HazardousMaterialCodeQualifier']); $HazardousMaterialElement->appendChild($HazardousMaterialCodeQualifierElement);}
      if(array_key_exists('HazardousMaterialDescription',$package)){$HazardousMaterialDescriptionElement=$doc->createElement('HazardousMaterialDescription',$package['HazardousMaterialDescription']); $HazardousMaterialElement->appendChild($HazardousMaterialDescriptionElement);}
      if(array_key_exists('HazardousMaterialLabelCode',$package)){$HazardousMaterialLabelCodeElement=$doc->createElement('HazardousMaterialLabelCode',$package['HazardousMaterialLabelCode']); $HazardousMaterialElement->appendChild($HazardousMaterialLabelCodeElement);}
      if(array_key_exists('ShippingName',$package)){$ShippingNameElement=$doc->createElement('ShippingName',$package['ShippingName']); $HazardousMaterialElement->appendChild($ShippingNameElement);}
      if(array_key_exists('UNNAIDCode',$package)){$UNNAIDCodeElement=$doc->createElement('UNNAIDCode',$package['UNNAIDCode']); $HazardousMaterialElement->appendChild($UNNAIDCodeElement);}
      if(array_key_exists('HazardousPlacardNotation',$package)){$HazardousPlacardNotationElement=$doc->createElement('HazardousPlacardNotation',$package['HazardousPlacardNotation']); $HazardousMaterialElement->appendChild($HazardousPlacardNotationElement);}
      if(array_key_exists('WHMISCode',$package)){$WHMISCodeElement=$doc->createElement('WHMISCode',$package['WHMISCode']); $HazardousMaterialElement->appendChild($WHMISCodeElement);}
      if(array_key_exists('WHMISFreeText',$package)){$WHMISFreeTextElement=$doc->createElement('WHMISFreeText',$package['WHMISFreeText']); $HazardousMaterialElement->appendChild($WHMISFreeTextElement);}
      if(array_key_exists('PackingGroupCode',$package)){$PackingGroupCodeElement=$doc->createElement('PackingGroupCode',$package['PackingGroupCode']); $HazardousMaterialElement->appendChild($PackingGroupCodeElement);}
      if(array_key_exists('RegulationsExemptionCode',$package)){$RegulationsExemptionCodeElement=$doc->createElement('RegulationsExemptionCode',$package['RegulationsExemptionCode']); $HazardousMaterialElement->appendChild($RegulationsExemptionCodeElement);}
      if(array_key_exists('TextMessage',$package)){$TextMessageElement=$doc->createElement('TextMessage',$package['TextMessage']); $HazardousMaterialElement->appendChild($TextMessageElement);}
      if(array_key_exists('OuterPackageLabel',$package)){$OuterPackageLabelElement=$doc->createElement('OuterPackageLabel',$package['OuterPackageLabel']); $HazardousMaterialElement->appendChild($OuterPackageLabelElement);}
      $PackageElement->appendChild($HazardousMaterialElement); 
     }     
   
     $PackagesElement->appendChild($PackageElement); 
    }  
    $ItemElement->appendChild($PackagesElement);
   }
   //----------------------- kits ----------------------------
 
   if(isset($item['kits']) && count($item['kits']))
   {
    $KitsElement = $doc->createElement('Kits');

    foreach($item['kits'] as $kit)
    {
     $KitComponentElement=$doc->createElement('KitComponent');
     if(array_key_exists('ComponentPartNumber',$kit) && trim($kit['ComponentPartNumber'])!='')
     {
      $ComponentPartNumberElement=$doc->createElement('ComponentPartNumber',$kit['ComponentPartNumber']);
      if(array_key_exists('IDQualifier',$kit) && trim($kit['IDQualifier'])!=''){$ComponentPartNumberElement->setAttribute('IDQualifier',$kit['IDQualifier']);}
      $KitComponentElement->appendChild($ComponentPartNumberElement);
     }
     
     if(array_key_exists('ComponentBrand',$kit) && trim($kit['ComponentBrand'])!='')
     {
      $ComponentBrandElement=$doc->createElement('ComponentBrand',$kit['ComponentBrand']);
      $KitComponentElement->appendChild($ComponentBrandElement);
     }     

     if(array_key_exists('ComponentBrandLabel',$kit) && trim($kit['ComponentBrandLabel'])!='')
     {
      $ComponentBrandLabelElement=$doc->createElement('ComponentBrandLabel',$kit['ComponentBrandLabel']);
      $KitComponentElement->appendChild($ComponentBrandLabelElement);
     }     

     if(array_key_exists('ComponentSubBrand',$kit) && trim($kit['ComponentSubBrand'])!='')
     {
      $ComponentSubBrandElement=$doc->createElement('ComponentSubBrand',$kit['ComponentSubBrand']);
      $KitComponentElement->appendChild($ComponentSubBrandElement);
     }     

     if(array_key_exists('ComponentSubBrandLabel',$kit) && trim($kit['ComponentSubBrandLabel'])!='')
     {
      $ComponentSubBrandLabelElement=$doc->createElement('ComponentSubBrandLabel',$kit['ComponentSubBrandLabel']);
      $KitComponentElement->appendChild($ComponentSubBrandLabelElement);
     }     
     
     if(array_key_exists('Description',$kit) && trim($kit['Description'])!='')
     {
      $DescriptionElement=$doc->createElement('Description',$kit['Description']);
      $DescriptionElement->setAttribute('DescriptionCode', $kit['DescriptionCode']);
      if(array_key_exists('LanguageCode',$kit) && trim($kit['LanguageCode'])!='')
      {$DescriptionElement->setAttribute('LanguageCode',$kit['LanguageCode']);}
      $KitComponentElement->appendChild($DescriptionElement);
     }     
     
     if(array_key_exists('ComponentPartTerminologyID',$kit) && trim($kit['ComponentPartTerminologyID'])!='')
     {
      $ComponentPartTerminologyIDElement=$doc->createElement('ComponentPartTerminologyID',$kit['ComponentPartTerminologyID']);
      $KitComponentElement->appendChild($ComponentPartTerminologyIDElement);
     }     
     
     if(array_key_exists('QuantityInKit',$kit) && trim($kit['QuantityInKit'])!='')
     {
      $QuantityInKitElement=$doc->createElement('QuantityInKit',$kit['QuantityInKit']);
      $QuantityInKitElement->setAttribute('UOM', $kit['QuantityInKitUOM']);
      $KitComponentElement->appendChild($QuantityInKitElement);
     }     
     
     if(array_key_exists('SequenceCode',$kit) && trim($kit['SequenceCode'])!='')
     {
      $SequenceCodeElement=$doc->createElement('SequenceCode',$kit['SequenceCode']);
      $KitComponentElement->appendChild($SequenceCodeElement);
     }     
     
     if(array_key_exists('SoldSeparately',$kit) && trim($kit['SoldSeparately'])!='')
     {
      $SoldSeparatelyElement=$doc->createElement('SoldSeparately',$kit['SoldSeparately']);
      $KitComponentElement->appendChild($SoldSeparatelyElement);
     }     
          
     $KitComponentElement->setAttribute('MaintenanceType','A');
     $KitsElement->appendChild($KitComponentElement);
    }
    $ItemElement->appendChild($KitsElement);
   }
   
   
   
   
   //----------------------- interchanges ----------------------------
 
   if(isset($item['interchanges']) && count($item['interchanges']))
   {
    $PartInterchangeInfoElement=$doc->createElement('PartInterchangeInfo');
    foreach($item['interchanges'] as $interchange)
    {
     $PartInterchangeElement=$doc->createElement('PartInterchange');
     $PartInterchangeElement->setAttribute('MaintenanceType','A');
     $PartInterchangeElement->setAttribute('BrandAAIAID',$interchange['BrandAAIAID']);

     if(array_key_exists('BrandLabel',$interchange)){$PartInterchangeElement->setAttribute('BrandLabel',$interchange['BrandLabel']);}
     if(array_key_exists('SubBrandAAIAID',$interchange)){$PartInterchangeElement->setAttribute('SubBrandAAIAID',$interchange['SubBrandAAIAID']);}
     if(array_key_exists('SubBrandLabel',$interchange)){$PartInterchangeElement->setAttribute('SubBrandLabel',$interchange['SubBrandLabel']);}
     if(array_key_exists('VMRSBrandID',$interchange)){$PartInterchangeElement->setAttribute('VMRSBrandID',$interchange['VMRSBrandID']);}
     if(array_key_exists('ItemEquivalentUOM',$interchange)){$PartInterchangeElement->setAttribute('ItemEquivalentUOM',$interchange['ItemEquivalentUOM']);}
     if(array_key_exists('QualityGradeLevel',$interchange)){$PartInterchangeElement->setAttribute('QualityGradeLevel',$interchange['QualityGradeLevel']);}
     if(array_key_exists('InternalNotes',$interchange)){$PartInterchangeElement->setAttribute('InternalNotes',$interchange['InternalNotes']);}
     if(array_key_exists('LanguageCode',$interchange)){$PartInterchangeElement->setAttribute('LanguageCode',$interchange['LanguageCode']);}
     
     
     $InterchangePartNumberElement=$doc->createElement('PartNumber',$interchange['CompetitorPartNumber']);
     if(array_key_exists('ReferenceItem',$interchange)){$InterchangePartNumberElement->setAttribute('ReferenceItem', $interchange['ReferenceItem']);}
     if(array_key_exists('InterchangeQuantity',$interchange)){$InterchangePartNumberElement->setAttribute('InterchangeQuantity', $interchange['InterchangeQuantity']);}
     if(array_key_exists('UOM',$interchange)){$InterchangePartNumberElement->setAttribute('UOM', $interchange['UOM']);}
     if(array_key_exists('InterchangeNotes',$interchange) && trim($interchange['InterchangeNotes'])!=''){$InterchangePartNumberElement->setAttribute('InterchangeNotes', $interchange['InterchangeNotes']);}
     
     $PartInterchangeElement->appendChild($InterchangePartNumberElement);
     $PartInterchangeInfoElement->appendChild($PartInterchangeElement);
     
    }  
    $ItemElement->appendChild($PartInterchangeInfoElement);
   }
     
   
   //----------------------- assets ----------------------------
 
   if(isset($item['assets']) && count($item['assets']))
   {
    $DigitalAssetsElement=$doc->createElement('DigitalAssets');
    foreach($item['assets'] as $asset)
    {
     $DigitalFileInformationElement=$doc->createElement('DigitalFileInformation');
     $DigitalFileInformationElement->setAttribute('MaintenanceType','A');
     if(array_key_exists('AssetID',$asset)){$DigitalFileInformationElement->setAttribute('AssetID',$asset['AssetID']);}
     if(array_key_exists('LanguageCode',$asset) && trim($asset['LanguageCode'])!=''){$DigitalFileInformationElement->setAttribute('LanguageCode',$asset['LanguageCode']);}
     if(array_key_exists('FileName',$asset)){$FileNameElement=$doc->createElement('FileName',htmlspecialchars($asset['FileName'], ENT_XML1 | ENT_COMPAT, 'UTF-8')); $DigitalFileInformationElement->appendChild($FileNameElement);}
     if(array_key_exists('AssetType',$asset)){$AssetTypeElement=$doc->createElement('AssetType',$asset['AssetType']); $DigitalFileInformationElement->appendChild($AssetTypeElement);}
     if(array_key_exists('FileType',$asset)){$FileTypeElement=$doc->createElement('FileType',$asset['FileType']); $DigitalFileInformationElement->appendChild($FileTypeElement);}
     if(array_key_exists('Representation',$asset)){$RepresentationElement=$doc->createElement('Representation',$asset['Representation']);$DigitalFileInformationElement->appendChild($RepresentationElement);}
     if(array_key_exists('FileSize',$asset) && intval($asset['FileSize'])>0){$FileSizeElement=$doc->createElement('FileSize',$asset['FileSize']); $DigitalFileInformationElement->appendChild($FileSizeElement);}
     if(array_key_exists('Resolution',$asset)){$ResolutionElement=$doc->createElement('Resolution',$asset['Resolution']); $DigitalFileInformationElement->appendChild($ResolutionElement);}
     if(array_key_exists('ColorMode',$asset)){$ColorModeElement=$doc->createElement('ColorMode',$asset['ColorMode']); $DigitalFileInformationElement->appendChild($ColorModeElement);}
     if(array_key_exists('Background',$asset)){$BackgroundElement=$doc->createElement('Background',$asset['Background']); $DigitalFileInformationElement->appendChild($BackgroundElement);}
     if(array_key_exists('OrientationView',$asset)){$OrientationViewElement=$doc->createElement('OrientationView',$asset['OrientationView']); $DigitalFileInformationElement->appendChild($OrientationViewElement);}
     
     if(array_key_exists('AssetDimensionsUOM',$asset) && array_key_exists('AssetHeight',$asset) && array_key_exists('AssetWidth',$asset) && intval($asset['AssetWidth'])>0 && intval($asset['AssetHeight'])>0)
     {
      $AssetDimensionsElement=$doc->createElement('AssetDimensions'); 
      $AssetDimensionsElement->setAttribute('UOM', $asset['AssetDimensionsUOM']);
      $AssetHeightElement=$doc->createElement('AssetHeight',$asset['AssetHeight']);
      $AssetWidthElement=$doc->createElement('AssetWidth',$asset['AssetWidth']);
      $AssetDimensionsElement->appendChild($AssetHeightElement);
      $AssetDimensionsElement->appendChild($AssetWidthElement);
      $DigitalFileInformationElement->appendChild($AssetDimensionsElement);
     }

     if(array_key_exists('FilePath',$asset)){$FilePathElement=$doc->createElement('FilePath',$asset['FilePath']); $DigitalFileInformationElement->appendChild($FilePathElement);}
     if(array_key_exists('URI',$asset)){$URIelement=$doc->createElement('URI',$asset['URI']); $DigitalFileInformationElement->appendChild($URIelement);}
     if(array_key_exists('Duration',$asset) && array_key_exists('DurationUOM',$asset)){$DurationElement=$doc->createElement('Duration',$asset['Duration']); $DurationElement->setAttribute('UOM', $asset['DurationUOM']); $DigitalFileInformationElement->appendChild($DurationElement);}
     if(array_key_exists('Frame',$asset) && $asset['Frame']>0){$FrameElement=$doc->createElement('Frame',$asset['Frame']); $DigitalFileInformationElement->appendChild($FrameElement);}
     if(array_key_exists('TotalFrames',$asset) && $asset['TotalFrames']>0){$TotalFramesElement=$doc->createElement('TotalFrames',$asset['TotalFrames']); $DigitalFileInformationElement->appendChild($TotalFramesElement);}
     if(array_key_exists('Plane',$asset) && $asset['Plane']>0){$PlaneElement=$doc->createElement('Plane',$asset['Plane']); $DigitalFileInformationElement->appendChild($PlaneElement);}
     if(array_key_exists('Hemisphere',$asset)){$HemisphereElement=$doc->createElement('Hemisphere',$asset['Hemisphere']); $DigitalFileInformationElement->appendChild($HemisphereElement);}
     if(array_key_exists('Plunge',$asset)){$PlungeElement=$doc->createElement('Plunge',$asset['Plunge']); $DigitalFileInformationElement->appendChild($PlungeElement);}
     if(array_key_exists('TotalPlanes',$asset) && $asset['TotalPlanes']>0){$TotalPlanesElement=$doc->createElement('TotalPlanes',$asset['TotalPlanes']); $DigitalFileInformationElement->appendChild($TotalPlanesElement);}

     if(array_key_exists('Description',$asset) && array_key_exists('DescriptionCode',$asset) && trim($asset['Description'])!='')
     {
      $AssetDescriptionsElement=$doc->createElement('AssetDescriptions');
      $DescriptionElement=$doc->createElement('Description', htmlspecialchars($asset['Description'], ENT_XML1 | ENT_COMPAT, 'UTF-8'));
      $DescriptionElement->setAttribute('MaintenanceType', 'A');
      $DescriptionElement->setAttribute('DescriptionCode', $asset['DescriptionCode']);
      if(array_key_exists('DescriptionLanguageCode',$asset)){$DescriptionElement->setAttribute('LanguageCode', $asset['DescriptionLanguageCode']);}
      $AssetDescriptionsElement->appendChild($DescriptionElement);   
      $DigitalFileInformationElement->appendChild($AssetDescriptionsElement);
     }
     
     if(array_key_exists('AssetDate',$asset) && array_key_exists('AssetDateType',$asset))
     {
      $AssetDatesElement=$doc->createElement('AssetDates');
      $AssetDateElement=$doc->createElement('AssetDate',$asset['AssetDate']);
      $AssetDateElement->setAttribute('assetDateType', $asset['AssetDateType']);
      $AssetDatesElement->appendChild($AssetDateElement); 
      $DigitalFileInformationElement->appendChild($AssetDatesElement);
     }
     
     if(array_key_exists('Country',$asset)){$CountryElement=$doc->createElement('Country',$asset['Country']); $DigitalFileInformationElement->appendChild($CountryElement);}
     
     $DigitalAssetsElement->appendChild($DigitalFileInformationElement);
    }  
    $ItemElement->appendChild($DigitalAssetsElement);
   }
  }
 
  $TrailerElement=new DOMElement('Trailer');
  $root->appendChild($TrailerElement); 

  $TransactionDateElement=new DOMElement('TransactionDate',date('Y-m-d'));
  $ItemCountElement=new DOMElement('ItemCount',count($items));
  $TrailerElement->appendChild($ItemCountElement);
  $TrailerElement->appendChild($TransactionDateElement);
 
  return $doc;
 }

    
 function importPIESdata($userid,$items,$createparts,$partcategory,$doimport,$importoptions=false)
 {
     /*import options is name:value key pair
      * 
      * clearExistingAssetsByPart:(any value) cause the assets in this import to completely wipe out  
      * 
      * 
      * 
      */
     
     
  $pricing = new pricing;
  $asset = new asset;
  $pim = new pim;
  
  $results=array();  $actiondescription='would have been imported'; if($doimport){$actiondescription='was imported';}
  foreach($items as $partnumber=>$item)
  {

   if(!$pim->validPart($partnumber))
   {
       if($createparts)
       {
            $partcreateresult=$pim->createPart($partnumber, $partcategory, $item['PartTerminologyID']);
            if($partcreateresult)
            {
                $results[]='Item '.$partnumber.' '.$actiondescription.' to partcategory '.$partcategory;
            }
            else
            {// part create failed
                $results[]='Item '.$partnumber.' create failed';
            }
       }
       else
       { // we're not creating parts as part of the import - skip this item
           continue;
       }
   }

   
   //---------------------- descriptions -----------------
   
   if(isset($item['descriptions']) && count($item['descriptions']))
   {
    foreach($item['descriptions'] as $description)
    {
     if($doimport)
     {
      $pim->addPartDescription($partnumber, $description['Description'], $description['DescriptionCode'], $description['Sequence'], $description['LanguageCode']);
      $newoid=$pim->updatePartOID($partnumber);
      $pim->logPartEvent($partnumber, $userid, 'description ['.$description['Description'].'] type ['.$description['DescriptionCode'].'] added by mass import', $newoid);
     }
     $results[]='description ('.$description['Description'].') added to '.$partnumber;
    }
   }   
   
   // ----------------- prices --------------------
   if(isset($item['prices']) && count($item['prices']))
   {
    foreach($item['prices'] as $price)
    {
     if($doimport)
     {
      $pricing->addPrice($partnumber, $price['PriceSheetNumber'], $price['Price'], $price['CurrencyCode'], $price['PriceUOM'], $price['PriceType'], $price['EffectiveDate'], $price['ExpirationDate']);         
      $newoid=$pim->updatePartOID($partnumber);
      $pim->logPartEvent($partnumber, $userid, 'price ['.$price['Price'].' '.$price['CurrencyCode'].'] type ['.$price['PriceType'].'] added by mass import', $newoid);
     }
     $results[]=$price['PriceType'].' price ('.$price['Price'].') for item '.$partnumber.' '.$actiondescription;
    }
   }

   //------------------ assets --------------------
   if(isset($item['assets']) && count($item['assets']))
   {
    $sequence=1;
    
    //delete assets and connects for this part if already exists
    if($importoptions && array_key_exists('clearExistingAssetsByPart',$importoptions))
    {
     $asset->disconnectPartFromAsset($partnumber);
    }
    
    foreach($item['assets'] as $digitalasset)
    {
     if($doimport)
     {
      $oid=$pim->newoid();      
          
      //delete assets and connects for this part if already exists
      if($importoptions && array_key_exists('clearExistingAssetsByPart',$importoptions))
      {
       $asset->deleteAssetsByAssetid($digitalasset['AssetID']);
      }
      
      $assetlabel=''; if(array_key_exists('AssetLabel', $digitalasset)){$assetlabel=$digitalasset['AssetLabel'];}
      if(array_key_exists('AssetTags', $digitalasset) && trim($digitalasset['AssetTags'])!='')
      {
       $assettags=explode(',', $digitalasset['AssetTags']);
       foreach($assettags as $assettag)
       {
        if($assettagid=$asset->assetTagid(trim(strtoupper($assettag))))
        {
         $asset->addAssetTagidToAsset($digitalasset['AssetID'], $assettagid);            
         $asset->logAssetEvent($digitalasset['AssetID'], $userid, 'Asset tag ['.trim(strtoupper($assettag)).'] added to asset:'.$digitalasset['AssetID'], '');
        }
       }
      }
      
      $existingassets=$asset->getAssetRecordsByAssetid($digitalasset['AssetID']);      
      if(count($existingassets)==0)
      {
       $asset->addAsset($digitalasset['AssetID'], $digitalasset['FileName'], '', $digitalasset['URI'], $digitalasset['OrientationView'], $digitalasset['ColorMode'], intval($digitalasset['AssetHeight']), intval($digitalasset['AssetWidth']), $digitalasset['UOM'], intval($digitalasset['Resolution']), $digitalasset['Background'], $digitalasset['FileType'], intval($digitalasset['Public']), 1, $digitalasset['Description'], $oid, '', intval($digitalasset['FileSize']), 1,$digitalasset['DescriptionLanguageCode'],$assetlabel,$digitalasset['CreatedDate'],$digitalasset['Frame'],$digitalasset['TotalFrames'],$digitalasset['Plane'],$digitalasset['TotalPlanes']);
      }

      $asset->connectPartToAsset($partnumber, $digitalasset['AssetID'], $digitalasset['AssetType'], $sequence, $digitalasset['Representation']);
      $asset->logAssetEvent($digitalasset['AssetID'], $userid, $partnumber.' connected to asset '.$digitalasset['AssetID'].' as type '.$digitalasset['AssetType'] , '');
      $newoid=$pim->updatePartOID($partnumber);
      $pim->logPartEvent($partnumber, $userid, 'asset ['.$digitalasset['AssetID'].'] connected as type ['.$digitalasset['AssetType'].'] by mass import', $newoid);
      $sequence++;
     }
     $results[]=$digitalasset['FileType'].' asset ('.$digitalasset['AssetID'].') for item '.$partnumber.' '.$actiondescription;
    }
   }
 
   
  }

  return $results;   
 }
    
    
 function parttypeName($parttypeid)
 {
  $name='not found';
  $db = new mysql; $db->dbname=$db->pcdbname; $db->connect();
  if($stmt=$db->conn->prepare('select PartTerminologyName from Parts where PartTerminologyID=?'))
  {
   $stmt->bind_param('i', $parttypeid);
   $stmt->execute();
   $db->result = $stmt->get_result();
   if($row = $db->result->fetch_assoc())
   {
    $name=$row['PartTerminologyName'];
   }
  }
  $db->close();
  return $name;
 }

 
 function getLifeCycleCodes()
 {
  $codes=array();
  $db = new mysql; $db->dbname=$db->pcdbname; $db->connect();
  if($stmt=$db->conn->prepare('select CodeValue,CodeDescription from PIESReferenceFieldCode, PIESCode where PIESReferenceFieldCode.PIESCodeId=PIESCode.PIESCodeId and  PIESReferenceFieldCode.PIESFieldId=93 order by CodeDescription'))
  {
   $stmt->execute();
   $db->result = $stmt->get_result();
   while($row = $db->result->fetch_assoc())
   {
    $codes[]=array('code'=>$row['CodeValue'],'description'=>$row['CodeDescription']);
   }
  }
  $db->close();
  return $codes;    
 }

 function lifeCycleCodeDescription($code)
 {
  if(trim($code)==''){return 'not set (blank)';}
  $description='not found';
  $db = new mysql; $db->dbname=$db->pcdbname; $db->connect();
  if($stmt=$db->conn->prepare('select CodeDescription from PIESReferenceFieldCode, PIESCode where PIESReferenceFieldCode.PIESCodeId=PIESCode.PIESCodeId and PIESReferenceFieldCode.PIESFieldId=93 and CodeValue=?'))
  {
   $stmt->bind_param('s', $code);
   $stmt->execute();
   $db->result = $stmt->get_result();
   if($row = $db->result->fetch_assoc())
   {
    $description=$row['CodeDescription'];
   }
  }
  $db->close();
  return $description;    
 }
 
}
?>
